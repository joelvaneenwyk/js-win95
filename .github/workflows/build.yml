name: Build & Release

on:
  push:
    branches: [main, dev, develop, master]
    tags:
      - v*
  pull_request:
    branches: [main, dev, develop, master]

env:
  NODE_VERSION: 20.x

  # 'nektos/act' sets this to true so we know when we are running through
  # that instead of GitHub Actions.
  ACT: false

jobs:
  lint:
    name: 'Lint üîç'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node.js
        id: node-cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install packages
        run: npm ci

      - name: Lint
        run: npm run lint

  build:
    name: 'Build // ${{ matrix.os }} // ${{ matrix.arch }}'
    runs-on: '${{ matrix.os }}-latest'
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        # Build for supported platforms
        # https://github.com/electron/electron-packager/blob/ebcbd439ff3e0f6f92fa880ff28a8670a9bcf2ab/src/targets.js#L9
        # 32-bit Linux unsupported as of 2019: https://www.electronjs.org/blog/linux-32bit-support
        os: [macOS, ubuntu, windows]
        arch: [x64, arm64]
        include:
          - os: windows
            arch: ia32
          - os: ubuntu
            arch: armv7l
        # Publishing artifacts for multiple Windows architectures has
        # a bug which can cause the wrong architecture to be downloaded
        # for an update, so until that is fixed, only build Windows x64
        exclude:
          - os: windows
            arch: arm64
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node.js
        id: node-cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install packages
        run: npm ci

      - name: Set MacOS signing certs
        if: matrix.os == 'macOS'
        continue-on-error: true
        run: chmod +x tools/add-macos-cert.sh && ./tools/add-macos-cert.sh
        env:
          MACOS_CERT_P12: ${{ secrets.MACOS_CERT_P12 }}
          MACOS_CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}

      - name: Set Windows signing certificate
        if: runner.os == 'Windows'
        continue-on-error: true
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'win-certificate.pfx'
          encodedString: ${{ secrets.WINDOWS_CODESIGN_P12 }}

      - name: Download disk image (ps1)
        run: tools/download-disk.ps1
        if: runner.os != 'Windows' && startsWith(github.ref, 'refs/tags/')
        env:
          DISK_URL: ${{ secrets.DISK_URL }}

      - name: Download disk image (sh)
        run: ./tools/download-disk.sh
        if: runner.os != 'Windows' && startsWith(github.ref, 'refs/tags/')
        env:
          DISK_URL: ${{ secrets.DISK_URL }}

      - name: Forge Package
        continue-on-error: ${{ runner.os != 'Linux' }}
        run: npm run package -- --arch=${{ matrix.arch }}

      - name: Forge Make
        continue-on-error: true
        run: npm run make -- --arch=${{ matrix.arch }}
        env:
          APPLE_ID: ${{ secrets.APPLE_ID || '' }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD || '' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    WINDOWS_CODESIGN_FILE: ${{ steps.write_file.outputs.filePath || '' }}
      #    WINDOWS_CODESIGN_PASSWORD: ${{ secrets.WINDOWS_CODESIGN_PASSWORD || '' }}

      - name: Release
        uses: softprops/action-gh-release@v2
        continue-on-error: true
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: |
            out/**/*.deb
            out/**/*.dmg
            out/**/*setup*.exe
            out/**/*.rpm
            out/**/*.zip
